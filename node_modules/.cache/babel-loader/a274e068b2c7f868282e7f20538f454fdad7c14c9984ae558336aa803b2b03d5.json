{"ast":null,"code":"var _s = $RefreshSig$();\n// import axios from \"axios\";\n// import { useEffect, useState } from \"react\";\n\n// const  API_KEY='AFfM0e2K001yOMA8zZC2QMT2tmoQDkSy';\n\n// function Usegif(tag){\n\n//     const randomMemeurl=`https://api.giphy.com/v1/gifs/random?api_key=${API_KEY}`;\n// const tagMemeurl=`https://api.giphy.com/v1/gifs/random?api_key=${API_KEY}&tag=${tag}`;\n// const [gif,setGif]=useState(\"\");\n\n// const [loading,setLoading]=useState('false');\n\n// async function fetchData(tag){\n//     setLoading(true);\n\n//    const {data}= await axios.get(tag?(tagMemeurl):randomMemeurl);\n//    const imgSource=data.data.images.downsized_large.url;\n\n//    setGif(imgSource);\n//    setLoading(false);\n// }\n\n// useEffect(()=>{fetchData()},[])\n\n//    return {gif,loading,fetchData} \n// }\n// export default Usegif;\n\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nconst API_KEY = 'AFfM0e2K001yOMA8zZC2QMT2tmoQDkSy';\nfunction useGif(tag) {\n  _s();\n  const [gif, setGif] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const fetchData = async tag => {\n    setLoading(true);\n    const url = tag ? `https://api.giphy.com/v1/gifs/random?api_key=${API_KEY}&tag=${tag}` : `https://api.giphy.com/v1/gifs/random?api_key=${API_KEY}`;\n    try {\n      const {\n        data\n      } = await axios.get(url);\n      const imgSource = data.data.images.downsized_large.url;\n      setGif(imgSource);\n    } catch (error) {\n      console.error(\"Error fetching gif:\", error);\n      setGif(\"\"); // fallback to blank on error\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchData(tag);\n  }, [tag]);\n  return {\n    gif,\n    loading,\n    fetchData\n  };\n}\n_s(useGif, \"/FMqHCkruojaIbz5UWlOR16acf8=\");\nexport default useGif;","map":{"version":3,"names":["axios","useEffect","useState","API_KEY","useGif","tag","_s","gif","setGif","loading","setLoading","fetchData","url","data","get","imgSource","images","downsized_large","error","console"],"sources":["C:/Users/LENOVO/Downloads/Random-GIF-Generator-main/Random-GIF-Generator-main/src/hooks/Usegif.js"],"sourcesContent":["\r\n// import axios from \"axios\";\r\n// import { useEffect, useState } from \"react\";\r\n\r\n// const  API_KEY='AFfM0e2K001yOMA8zZC2QMT2tmoQDkSy';\r\n\r\n\r\n\r\n// function Usegif(tag){\r\n\r\n//     const randomMemeurl=`https://api.giphy.com/v1/gifs/random?api_key=${API_KEY}`;\r\n// const tagMemeurl=`https://api.giphy.com/v1/gifs/random?api_key=${API_KEY}&tag=${tag}`;\r\n// const [gif,setGif]=useState(\"\");\r\n\r\n// const [loading,setLoading]=useState('false');\r\n\r\n// async function fetchData(tag){\r\n//     setLoading(true);\r\n  \r\n//    const {data}= await axios.get(tag?(tagMemeurl):randomMemeurl);\r\n//    const imgSource=data.data.images.downsized_large.url;\r\n   \r\n//    setGif(imgSource);\r\n//    setLoading(false);\r\n// }\r\n\r\n// useEffect(()=>{fetchData()},[])\r\n\r\n\r\n//    return {gif,loading,fetchData} \r\n// }\r\n// export default Usegif;\r\n\r\n\r\nimport axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nconst API_KEY = 'AFfM0e2K001yOMA8zZC2QMT2tmoQDkSy';\r\n\r\nfunction useGif(tag) {\r\n  const [gif, setGif] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const fetchData = async (tag) => {\r\n    setLoading(true);\r\n    const url = tag\r\n      ? `https://api.giphy.com/v1/gifs/random?api_key=${API_KEY}&tag=${tag}`\r\n      : `https://api.giphy.com/v1/gifs/random?api_key=${API_KEY}`;\r\n\r\n    try {\r\n      const { data } = await axios.get(url);\r\n      const imgSource = data.data.images.downsized_large.url;\r\n      setGif(imgSource);\r\n    } catch (error) {\r\n      console.error(\"Error fetching gif:\", error);\r\n      setGif(\"\"); // fallback to blank on error\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData(tag);\r\n  }, [tag]);\r\n\r\n  return { gif, loading, fetchData };\r\n}\r\n\r\nexport default useGif;\r\n"],"mappings":";AACA;AACA;;AAEA;;AAIA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;;AAGA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAE3C,MAAMC,OAAO,GAAG,kCAAkC;AAElD,SAASC,MAAMA,CAACC,GAAG,EAAE;EAAAC,EAAA;EACnB,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAClC,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAE7C,MAAMS,SAAS,GAAG,MAAON,GAAG,IAAK;IAC/BK,UAAU,CAAC,IAAI,CAAC;IAChB,MAAME,GAAG,GAAGP,GAAG,GACV,gDAA+CF,OAAQ,QAAOE,GAAI,EAAC,GACnE,gDAA+CF,OAAQ,EAAC;IAE7D,IAAI;MACF,MAAM;QAAEU;MAAK,CAAC,GAAG,MAAMb,KAAK,CAACc,GAAG,CAACF,GAAG,CAAC;MACrC,MAAMG,SAAS,GAAGF,IAAI,CAACA,IAAI,CAACG,MAAM,CAACC,eAAe,CAACL,GAAG;MACtDJ,MAAM,CAACO,SAAS,CAAC;IACnB,CAAC,CAAC,OAAOG,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;MAC3CV,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC;IACd,CAAC,SAAS;MACRE,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAEDT,SAAS,CAAC,MAAM;IACdU,SAAS,CAACN,GAAG,CAAC;EAChB,CAAC,EAAE,CAACA,GAAG,CAAC,CAAC;EAET,OAAO;IAAEE,GAAG;IAAEE,OAAO;IAAEE;EAAU,CAAC;AACpC;AAACL,EAAA,CA3BQF,MAAM;AA6Bf,eAAeA,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}